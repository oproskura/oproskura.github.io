{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","App","props","state","text","maxViewEditor","maxViewPrev","handleChange","bind","handleClickEditor","handleClickPrev","getMarkdownText","event","this","setState","target","value","__html","sanitize","links","document","getElementsByTagName","i","length","test","getAttribute","className","Component","Editor","icon","faExpandArrowsAlt","onClick","onChange","id","MaxEditor","faCompressAlt","Previewer","dangerouslySetInnerHTML","MaxPreviewer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.774384cc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport marked from 'marked';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExpandArrowsAlt, faCompressAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst txt = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n\n`;\n\nmarked.setOptions({\n  breaks: true\n});\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: txt,\n      maxViewEditor: false,\n      maxViewPrev: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickEditor = this.handleClickEditor.bind(this);\n    this.handleClickPrev = this.handleClickPrev.bind(this);\n    this.getMarkdownText = this.getMarkdownText.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      text: event.target.value\n    })\n  };\n\n  handleClickEditor() {\n    this.setState((state) => ({\n      maxViewEditor: !state.maxViewEditor\n    }))\n  }\n\n  handleClickPrev() {\n    this.setState((state) => ({\n      maxViewPrev: !state.maxViewPrev\n    }))\n  }\n\n  getMarkdownText() {\n    const markdown = marked(this.state.text, { sanitize: true });\n    return { __html: markdown };\n  }\n\n  componentDidMount() {\n    const links = document.getElementsByTagName('a');\n    for (var i = 0; i < links.length; i++) {\n      if (/^(https?:)?\\/\\//.test(links[i].getAttribute('href'))) {\n        links[i].target = '_blank';\n      }\n    }\n  }\n\n  render() {\n\n    return (\n      <div className='row mx-auto flex-column justify-content-start align-items-center'>\n        {this.state.maxViewEditor\n          ? <MaxEditor text={this.state.text} handleChange={this.handleChange} handleClickEditor={this.handleClickEditor} />\n          : this.state.maxViewPrev\n            ? <MaxPreviewer text={this.state.text} handleClickPrev={this.handleClickPrev} getMarkdownText={this.getMarkdownText} />\n            : (\n              <div className='d-flex flex-column justify-content-start align-items-center mt-3 mb-3'>\n                <Editor text={this.state.text} handleChange={this.handleChange} handleClickEditor={this.handleClickEditor} />\n                <Previewer text={this.state.text} handleClickPrev={this.handleClickPrev} getMarkdownText={this.getMarkdownText} />\n              </div>\n            )\n        }\n\n      </div>\n    )\n  }\n}\n\nclass Editor extends Component {\n\n  render() {\n\n    return (\n      <div className='editor d-flex flex-column shadow'>\n        <div className='header d-flex justify-content-between align-items-center pr-2 pl-1 border border-bottom-0 border-dark'>\n          <span>Editor</span>\n          <FontAwesomeIcon icon={faExpandArrowsAlt} onClick={this.props.handleClickEditor} />\n        </div>\n        <textarea className='editor-body border border-dark pl-1' onChange={this.props.handleChange} value={this.props.text} id=\"editor\"></textarea>\n      </div>\n    )\n  }\n}\n\nclass MaxEditor extends Component {\n\n  render() {\n\n    return (\n      <div className='max-editor d-flex flex-column shadow mt-3 mb-3'>\n        <div className='header d-flex justify-content-between align-items-center pr-2 pl-1 border border-bottom-0 border-dark'>\n          <span>Editor</span>\n          <FontAwesomeIcon icon={faCompressAlt} onClick={this.props.handleClickEditor} />\n        </div>\n        <textarea className='editor-body h-100 border border-dark pl-1' onChange={this.props.handleChange} value={this.props.text} id=\"editor\"></textarea>\n      </div>\n    )\n  }\n}\n\nclass Previewer extends Component {\n\n  render() {\n\n    return (\n      <div className='previewer d-flex flex-column shadow mt-3'>\n        <div className='header d-flex justify-content-between align-items-center pr-2 pl-1 border border-bottom-0 border-dark'>\n          <span>Previewer</span>\n          <FontAwesomeIcon icon={faExpandArrowsAlt} onClick={this.props.handleClickPrev} />\n        </div>\n        <div className='previewer-body border border-dark pr-2 pl-1' dangerouslySetInnerHTML={this.props.getMarkdownText()} id=\"preview\" />\n      </div>\n    )\n  }\n}\n\nclass MaxPreviewer extends Component {\n\n  render() {\n\n    return (\n      <div className='max-previewer d-flex flex-column border border-dark shadow mt-3 mb-3'>\n        <div className='header d-flex justify-content-between align-items-center pr-2 pl-1 border-bottom border-dark'>\n          <span>Previewer</span>\n          <FontAwesomeIcon icon={faCompressAlt} onClick={this.props.handleClickPrev} />\n        </div>\n        <div className='previewer-body pt-2 pr-2 pl-1' dangerouslySetInnerHTML={this.props.getMarkdownText()} id=\"preview\" />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}